# When a new tag (formated like *.*.*) is pushed, builds a python package, creates a GitHub release and publishes to a private pypi index (determined by secrets.PRIVATE_PYPI_PUBLISH* secrets).
# Based on https://github.com/python-poetry/poetry/blob/master/.github/workflows/release.yml
# To trigger, create and push a tag, e.g.:
#   git tag -a 1.2.3 -m "tag description"; git push --tags
name: Release

on:
  push:
    tags:
      - '*.*.*'
env:
  # Make sure these secrets are set in this git repo or organisation settings:

  # Private package index credentials, for installing and publishing to the private pypi index (see readme)
  PUBLISH_URL: ${{secrets.PRIVATE_PYPI_PUBLISH_URL}}
  PUBLISH_USER: ${{secrets.PRIVATE_PYPI_PUBLISH_USER}}
  PUBLISH_PASSWORD: ${{secrets.PRIVATE_PYPI_PUBLISH_PASSWORD}}

  PYTHON_VERSION: 3.9.13
  POETRY_VERSION: 1.5.1

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}

      # install & configure poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{env.POETRY_VERSION}}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Update PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Build project for distribution
        run: poetry build

      - name: Check Version
        id: check-version
        run: |
          [[ "$(poetry version --short)" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] \
            || echo ::set-output name=prerelease::true

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: steps.check-version.outputs.prerelease == 'true'

      # Adds private package index URL and credentials to the poetry config, for installing from and publishing to the private package index.
      # Skips this step if the relevant secrets are not set.
      - name: Add Private Package Index
        if: "${{ env.PUBLISH_URL != '' }}"
        run: |
          poetry config repositories.csiroenergy ${{env.PUBLISH_URL}}
          poetry config http-basic.csiroenergy ${{env.PUBLISH_USER}} ${{env.PUBLISH_PASSWORD}}

      - name: Build
        run: poetry build

      - name: Publish
        run: poetry publish -r csiroenergy

      # Publishes the static html docs generated by sphinx to a new branch. Go to Settings > Pages in the web ui and make the `gh-pages` branch public.
      # CAUTION: you can't publish docs privately like this without paying for a Github Enterprise account, so don't use on private repos!!
#      - name: Deploy to GitHub Pages
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          publish_branch: gh-pages
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: docs/build/
#          force_orphan: true
